
project(comm)
cmake_minimum_required(VERSION 2.8)
set(CMAKE_CXX_STANDARD 14)
#set(CMAKE_BUILD_TYPE "Release") #using CMAKE_BUILD_TYPE to set the cmake method [Debug | Release]
# CMAKE_CXX_FLAGS CMake C++
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -O2 -pthread -fPIE")  #-fopenmp add-on multi-thread openmp support
set(CMAKE_AUTOMOC ON)
set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH}  "${PROJECT_SOURCE_DIR}/../../3rd_src/gcc_64")


set(CMAKE_INCLUDE_CURRENT_DIR ON)
aux_source_directory(. SRC_LIST)

find_package(catkin REQUIRED COMPONENTS
    cmake_modules
    smarteye_common
    dynamic_reconfigure
    message_generation
    roscpp
    rospy
    std_msgs
    std_srvs
    mavros
    serial
    )






find_package(Threads)
set(comm_includes
    include
    ${PROJECT_SOURCE_DIR}/../../3rd_src/mavlink
    ${catkin_INCLUDE_DIRS}
    ${Boost_INCLUDE_DIRS}
    )

include_directories(${comm_includes})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})  
add_library(comm  src/comm.cpp
    )
add_dependencies(comm ${catkin_EXPORTED_TARGETS})
target_link_libraries(comm
    ${catkin_LIBRARIES}
    )

catkin_package(
    INCLUDE_DIRS   include
    CATKIN_DEPENDS dynamic_reconfigure  message_generation  roscpp rospy  std_msgs std_srvs mavros
    )

message("CMakePath=${CMAKE_PREFIX_PATH}")
link_directories(${LIBRARY_OUTPUT_PATH}) 
add_executable(comm_node
               src/comm.cpp
               src/main.cpp
    )




target_link_libraries(comm_node
    ${catkin_LIBRARIES}
    ${CMAKE_THREAD_LIBS_INIT}

    )


add_dependencies(comm_node ${catkin_EXPORTED_TARGETS})
